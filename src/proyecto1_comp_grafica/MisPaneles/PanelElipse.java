/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyecto1_comp_grafica.MisPaneles;

import java.awt.Color;
import java.awt.Graphics;
import java.text.DecimalFormat;
import javafx.scene.shape.Ellipse;


/**
 *
 * @author jorgeandrade
 */
public class PanelElipse extends javax.swing.JPanel {

    /**
     * Creates new form PanelElipse
     */
    public PanelElipse() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        radio1 = new javax.swing.JTextField();
        centrox = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        centroy = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        radio2 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        PanelDibujoElipse = new javax.swing.JPanel();
        DibujarElipse = new javax.swing.JButton();
        EscalarElipse = new javax.swing.JButton();
        esc = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        BorrarElipse = new javax.swing.JButton();
        jComboBox2 = new javax.swing.JComboBox<>();

        setBackground(new java.awt.Color(204, 204, 204));

        jLabel3.setText("Centro:");

        jLabel4.setText("ancho:");

        jLabel5.setText("X");

        jLabel6.setText("Alto");

        jLabel7.setText("Y");

        jLabel8.setText("Elija una opci√≥n (Dibujar/Transformar) :");

        PanelDibujoElipse.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout PanelDibujoElipseLayout = new javax.swing.GroupLayout(PanelDibujoElipse);
        PanelDibujoElipse.setLayout(PanelDibujoElipseLayout);
        PanelDibujoElipseLayout.setHorizontalGroup(
            PanelDibujoElipseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        PanelDibujoElipseLayout.setVerticalGroup(
            PanelDibujoElipseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 509, Short.MAX_VALUE)
        );

        DibujarElipse.setBackground(new java.awt.Color(153, 204, 255));
        DibujarElipse.setText("Dibujar");
        DibujarElipse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DibujarElipseActionPerformed(evt);
            }
        });

        EscalarElipse.setText("Escalar");
        EscalarElipse.setEnabled(false);
        EscalarElipse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EscalarElipseActionPerformed(evt);
            }
        });

        esc.setEnabled(false);

        jLabel1.setText("Escalar:");

        BorrarElipse.setBackground(new java.awt.Color(255, 102, 102));
        BorrarElipse.setText("Borrar");
        BorrarElipse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BorrarElipseActionPerformed(evt);
            }
        });

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Dibujar", "Transformar" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(centrox, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(22, 22, 22)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(centroy, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(radio1, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(radio2, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(DibujarElipse, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BorrarElipse)
                        .addGap(149, 149, 149)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(esc, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(EscalarElipse)))
                .addContainerGap(158, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PanelDibujoElipse, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(DibujarElipse, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(BorrarElipse, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(centrox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7)
                                    .addComponent(centroy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel4)
                                .addComponent(radio1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel6)
                                .addComponent(radio2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(EscalarElipse)
                        .addComponent(esc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1)))
                .addGap(18, 18, 18)
                .addComponent(PanelDibujoElipse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void DibujarElipseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DibujarElipseActionPerformed
         Graphics t = PanelDibujoElipse.getGraphics();
         
         float rx,ry,xc,yc;
         rx=Integer.parseInt(radio1.getText());
         ry=Integer.parseInt(radio2.getText());
          xc=Integer.parseInt(centrox.getText());
          yc=Integer.parseInt(centroy.getText());
         
        
       float dx, dy, d1, d2, x, y; 
    x = 0; 
    y = ry; 
  
    // Initial decision parameter of region 1 
    d1 = (ry * ry) - (rx * rx * ry) + 
                    (0.25f * rx * rx); 
    dx = 2 * ry * ry * x; 
    dy = 2 * rx * rx * y; 
    DecimalFormat df = new DecimalFormat("#,###,##0.00000"); 
      
    // For region 1 
    while (dx < dy) 
    { 
      
        // Print points based on 4-way symmetry 
        System.out.println(df.format((x + xc)) +  
                            ", "+df.format((y + yc))); t.drawLine(Math.round(x + xc), Math.round(y + yc), Math.round(x + xc), Math.round(y + yc));
        System.out.println(df.format((-x + xc)) + 
                            ", "+ df.format((y + yc))); t.drawLine(Math.round(-x + xc), Math.round(y + yc), Math.round(-x + xc), Math.round(y + yc));
        System.out.println(df.format((x + xc)) +  
                            ", "+ df.format((-y + yc))); t.drawLine(Math.round(x + xc), Math.round(-y + yc), Math.round(x + xc), Math.round(-y + yc));
        System.out.println(df.format((-x + xc)) + 
                            ", "+df.format((-y + yc))); t.drawLine(Math.round(-x + xc), Math.round(-y + yc), Math.round(-x + xc), Math.round(-y + yc));
  
        // Checking and updating value of 
        // decision parameter based on algorithm 
        if (d1 < 0)  
        { 
            x++; 
            dx = dx + (2 * ry * ry); 
            d1 = d1 + dx + (ry * ry); 
        } 
        else
        { 
            x++; 
            y--; 
            dx = dx + (2 * ry * ry); 
            dy = dy - (2 * rx * rx); 
            d1 = d1 + dx - dy + (ry * ry); 
        } 
    } 
  
    // Decision parameter of region 2 
    d2 = ((ry * ry) * ((x + 0.5f) * (x + 0.5f))) 
        + ((rx * rx) * ((y - 1) * (y - 1))) 
        - (rx * rx * ry * ry); 
  
    // Plotting points of region 2 
    while (y >= 0) { 
  
        // printing points based on 4-way symmetry 
        System.out.println(df.format((x + xc)) +  
                            ", " + df.format((y + yc))); t.drawLine(Math.round(x + xc), Math.round(y + yc), Math.round(x + xc), Math.round(y + yc));
        System.out.println(df.format((-x + xc)) +  
                            ", "+ df.format((y + yc))); t.drawLine(Math.round(-x + xc), Math.round(y + yc), Math.round(-x + xc), Math.round(y + yc));
        System.out.println(df.format((x + xc)) + 
                            ", " + df.format((-y + yc))); t.drawLine(Math.round(x + xc), Math.round(-y + yc), Math.round(x + xc), Math.round(-y + yc));
        System.out.println(df.format((-x + xc)) + 
                            ", " + df.format((-y + yc))); t.drawLine(Math.round(-x + xc), Math.round(-y + yc), Math.round(-x + xc), Math.round(-y + yc));
  
        // Checking and updating parameter 
        // value based on algorithm 
        if (d2 > 0) { 
            y--; 
            dy = dy - (2 * rx * rx); 
            d2 = d2 + (rx * rx) - dy; 
        } 
        else { 
            y--; 
            x++; 
            dx = dx + (2 * ry * ry); 
            dy = dy - (2 * rx * rx); 
            d2 = d2 + dx - dy + (rx * rx); 
        } 
    } 
        
    }//GEN-LAST:event_DibujarElipseActionPerformed

    private void EscalarElipseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EscalarElipseActionPerformed
       Graphics t = PanelDibujoElipse.getGraphics();
         
         int rx,ry,xc,yc,escalar;
         rx=Integer.parseInt(radio1.getText());
         ry=Integer.parseInt(radio2.getText());
          xc=Integer.parseInt(centrox.getText());
          yc=Integer.parseInt(centroy.getText());
          escalar=Integer.parseInt(esc.getText());
         
          rx=rx*escalar;
          ry=ry*escalar;
        
          radio1.setText(Integer.toString(rx));
          radio2.setText(Integer.toString(ry));
          
       float dx, dy, d1, d2, x, y; 
    x = 0; 
    y = ry; 
  
    // Initial decision parameter of region 1 
    d1 = (ry * ry) - (rx * rx * ry) + 
                    (0.25f * rx * rx); 
    dx = 2 * ry * ry * x; 
    dy = 2 * rx * rx * y; 
    DecimalFormat df = new DecimalFormat("#,###,##0.00000"); 
      
    // For region 1 
    while (dx < dy) 
    { 
      
        // Print points based on 4-way symmetry 
        System.out.println(df.format((x + xc)) +  
                            ", "+df.format((y + yc))); t.drawLine(Math.round(x + xc), Math.round(y + yc), Math.round(x + xc), Math.round(y + yc));
        System.out.println(df.format((-x + xc)) + 
                            ", "+ df.format((y + yc))); t.drawLine(Math.round(-x + xc), Math.round(y + yc), Math.round(-x + xc), Math.round(y + yc));
        System.out.println(df.format((x + xc)) +  
                            ", "+ df.format((-y + yc))); t.drawLine(Math.round(x + xc), Math.round(-y + yc), Math.round(x + xc), Math.round(-y + yc));
        System.out.println(df.format((-x + xc)) + 
                            ", "+df.format((-y + yc))); t.drawLine(Math.round(-x + xc), Math.round(-y + yc), Math.round(-x + xc), Math.round(-y + yc));
  
        // Checking and updating value of 
        // decision parameter based on algorithm 
        if (d1 < 0)  
        { 
            x++; 
            dx = dx + (2 * ry * ry); 
            d1 = d1 + dx + (ry * ry); 
        } 
        else
        { 
            x++; 
            y--; 
            dx = dx + (2 * ry * ry); 
            dy = dy - (2 * rx * rx); 
            d1 = d1 + dx - dy + (ry * ry); 
        } 
    } 
  
    // Decision parameter of region 2 
    d2 = ((ry * ry) * ((x + 0.5f) * (x + 0.5f))) 
        + ((rx * rx) * ((y - 1) * (y - 1))) 
        - (rx * rx * ry * ry); 
  
    // Plotting points of region 2 
    while (y >= 0) { 
  
        // printing points based on 4-way symmetry 
        System.out.println(df.format((x + xc)) +  
                            ", " + df.format((y + yc))); t.drawLine(Math.round(x + xc), Math.round(y + yc), Math.round(x + xc), Math.round(y + yc));
        System.out.println(df.format((-x + xc)) +  
                            ", "+ df.format((y + yc))); t.drawLine(Math.round(-x + xc), Math.round(y + yc), Math.round(-x + xc), Math.round(y + yc));
        System.out.println(df.format((x + xc)) + 
                            ", " + df.format((-y + yc))); t.drawLine(Math.round(x + xc), Math.round(-y + yc), Math.round(x + xc), Math.round(-y + yc));
        System.out.println(df.format((-x + xc)) + 
                            ", " + df.format((-y + yc))); t.drawLine(Math.round(-x + xc), Math.round(-y + yc), Math.round(-x + xc), Math.round(-y + yc));
  
        // Checking and updating parameter 
        // value based on algorithm 
        if (d2 > 0) { 
            y--; 
            dy = dy - (2 * rx * rx); 
            d2 = d2 + (rx * rx) - dy; 
        } 
        else { 
            y--; 
            x++; 
            dx = dx + (2 * ry * ry); 
            dy = dy - (2 * rx * rx); 
            d2 = d2 + dx - dy + (rx * rx); 
        } 
    } 
    }//GEN-LAST:event_EscalarElipseActionPerformed

    private void BorrarElipseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BorrarElipseActionPerformed
        centrox.setText(null);
        centroy.setText(null);
        radio1.setText(null);
        radio2.setText(null);
        PanelDibujoElipse.removeAll();
        PanelDibujoElipse.repaint();
    }//GEN-LAST:event_BorrarElipseActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed

        if (jComboBox2.getSelectedItem()== "Dibujar"){
            centrox.setEnabled(true);
            centroy.setEnabled(true);
            radio1.setEnabled(true);
            radio2.setEnabled(true);
            DibujarElipse.setEnabled(true);
            esc.setEnabled(false);
            
            EscalarElipse.setEnabled(false);
           

        }
        else if (jComboBox2.getSelectedItem() == "Transformar")
        {
            centrox.setEnabled(false);
            centroy.setEnabled(false);
            radio1.setEnabled(false);
            radio2.setEnabled(false);
            DibujarElipse.setEnabled(false);
            esc.setEnabled(true);
            
            EscalarElipse.setEnabled(true);
            
        }
    }//GEN-LAST:event_jComboBox2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BorrarElipse;
    private javax.swing.JButton DibujarElipse;
    private javax.swing.JButton EscalarElipse;
    private javax.swing.JPanel PanelDibujoElipse;
    private javax.swing.JTextField centrox;
    private javax.swing.JTextField centroy;
    private javax.swing.JTextField esc;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JTextField radio1;
    private javax.swing.JTextField radio2;
    // End of variables declaration//GEN-END:variables
}
